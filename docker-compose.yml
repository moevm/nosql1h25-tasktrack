# version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_backend
    restart: unless-stopped
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=task_track.settings
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  neo4j:
    image: neo4j:${NEO4J_VERSION}-${NEO4J_EDITION}
    container_name: ${COMPOSE_PROJECT_NAME}_neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4J_dbms_memory_pagecache_size=4G
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    ports:
      - "${NEO4J_BOLT_PORT}:7687"
      - "${NEO4J_HTTP_PORT}:7474"
      - "${NEO4J_HTTPS_PORT}:7473"
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/import:/import
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:7474"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  app_network:
    driver: bridge