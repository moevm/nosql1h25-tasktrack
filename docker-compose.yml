version: '3'

volumes:
  static:
  media:


services:
  db:
    image: neo4j:${NEO4J_VERSION}-${NEO4J_EDITION}
    container_name: ${COMPOSE_PROJECT_NAME}-neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4J_dbms_memory_pagecache_size=4G
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    ports:
      - "7687:7687"
      - "7474:7474"
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/import:/import
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:7474"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 30s


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-backend
    restart: unless-stopped
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=task_track.settings
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - static:/static
      - media:/app/media
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build: ./frontend/
    command: cp -r /app/build/. /static/
    volumes:
      - static:/static

  gateway:
    build: ./nginx/
    ports:
      - 80:80
    depends_on:
      - backend
    volumes:
      - static:/static
      - media:/media